#Написать программу, которая будет складывать, вычитать, умножать или делить два числа.
# Числа и знак операции вводятся пользователем. После выполнения вычисления программа не должна завершаться,
# а должна запрашивать новые данные для вычислений.
# Завершение программы должно выполняться при вводе символа '0' в качестве знака операции.
# Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'),
# то программа должна сообщать ему об ошибке и снова запрашивать знак операции.
# Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.
"""
while 1:
    oper = input('Введите знак операции (+,-,*,/) или 0 для выхода: ')
    while oper != '+' and oper != '-' and oper != '*' and oper != '/' and oper != '0':
        oper = input('Введите корректный знак операции (+,-,*,/) или 0 для выхода: ')
    if oper == '0':
        break

    num_1 = float(input('Введите первое число: '))
    num_2 = float(input('Введите второе число: '))
    if oper == '+':
        print(num_1 + num_2)
    elif oper == '-':
        print(num_1 - num_2)
    elif oper == '*':
        print(num_1 * num_2)
    elif oper == '/':
        if num_2 != 0:
            print(num_1 / num_2)
        else:
            print('На ноль делить нельзя')
    """
#2. Посчитать четные и нечетные цифры введенного натурального числа. Например, если введено число 34560,
# то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).
'''
num = input('Введите число: ')
even = 0
odd = 0
for el in num:
    if int(el) % 2 == 0:
        even += 1
    elif int(el) == 0:
        even += 1
    else:
        odd += 1
print(f'В этом числе {even} четных и {odd} нечетных цифр')
'''

#3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, то надо вывести число 6843.
'''
n = int(input('Введите число: '))
k = 0
while n > 0:
    n1 = n % 10
    n = n // 10
    k = k * 10 + n1
print(f'Обратное число {k}')
'''

#4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...Количество элементов (n) вводится с клавиатуры.
'''
n = int(input('Введите количество элементов: '))
a = 1
k = 1
sum = 0
while k < n:
    a = a / (-2)
    sum = sum + a
    k += 1
print(sum)
'''

#5. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно.
# Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.
'''
for i in range(32,127):
    print(chr(i), end=' ')
    if (i-1)%10 == 0:
        print()
'''

#6. В программе генерируется случайное целое число от 0 до 100.
# Пользователь должен его отгадать не более чем за 10 попыток.
# После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число,
# чем то, что загадано. Если за 10 попыток число не отгадано, то вывести загаданное число.
'''
import random
a = random.randint(0,100)
n = 0
while n < 10:
    b = int(input('Введите число: '))
    if b < a:
        print('Введенное число меньше загаданного.')
    elif b > a:
        print('Введенное число больше загаданного.')
    elif b == a:
        print('Вы угадали!')
        break
    n += 1
print('Загаданное число = ', a)
'''

#7. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство:
# 1+2+...+n = n(n+1)/2, где n - любое натуральное число.
"""
n = int(input('введите число: '))
rgt = n * (n + 1) / 2
i = 0
lft = 0
while i <= n:
    lft = lft + i
    i += 1
print(rgt)
print(lft)
"""

#8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел.
#Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.
"""
import random
n = int(input('Введите количество чисел: '))
a = input('Введите искомую цифру: ')
s = 0
i = 0
while i < n:
    b = str(random.randint(0,100))
    for el in b:
        if el == a:
            s += 1
    i += 1
print(f'Искомая цифра {a} встречается {s} раз в последовательности из {n} чисел')
"""

#9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр.
# Вывести на экран это число и сумму его цифр.
import random
i_1 = 0
max_sum = 0
while i_1 < 10:
    a = random.randint(0,1000)
    sum_n = 0
    i = 0
    while i < len(str(a)):
        n = str(a)[i]
        i += 1
        sum_n = sum_n + int(n)
    print(f'Сумма цифр {sum_n} у числа {a}')
    i_1 += 1
    if max_sum < sum_n:
        max_sum = sum_n
        b = (f'Наибольшая сумм цифр {max_sum} у числа {a}')
print(b)